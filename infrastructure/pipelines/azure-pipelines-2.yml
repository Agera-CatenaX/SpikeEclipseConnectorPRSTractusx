# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

name: $(BuildID)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'portal/*'

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageRepository: 'portal'
  containerRegistry: 'catenaxdevacr.azurecr.io'
  imagePullSecret: 'catenaxdevacr-auth'
    # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: catenaxdevacr
        repository: portal
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/portal/code/tractus-x-portal/Dockerfile'
        tags: |
          $(tag)
    - upload: $(System.DefaultWorkingDirectory)/infrastructure/manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'TractusXPortal.portal'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            inputs:
              action: createSecret
              kubernetesServiceConnection: catenax-dev-aks-services-portal
              namespace: portal
              secretType: dockerRegistry
              secretName:  $(imagePullSecret)
              dockerRegistryEndpoint: 'catenaxdevacr'

          - task: KubernetesManifest@0
            inputs:
              action: deploy
              kubernetesServiceConnection: catenax-dev-aks-services-portal
              namespace: portal
              manifests: |
                $(Pipeline.Workspace)/manifests/portal.yaml
                $(Pipeline.Workspace)/manifests/portal-ingress.yaml
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              imagePullSecrets: |
                $(imagePullSecret)