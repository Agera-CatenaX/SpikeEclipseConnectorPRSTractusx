openapi: 3.0.0
info:
  title: "Tractus-X PoC Mock Data API"
  description: Tractus-X PoC Mock Data API
  version: 0.0.1 PoC
  termsOfService: https://projects.eclipse.org/proposals/eclipse-tractus-x
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Felix Gerbig
    email: felix.gerbig@bmw.de

servers:
  - url: https://data.catenax-poc-dsc.bmw.cloud

paths:
  /cdh-ids/get-data:
    get:
      summary: Retrieve Existing Mock Data
      description: Retrieve existing mock data according to information model
      operationId: getData
      tags:
        - "Mock  Data"
      parameters:
        - name: company
          in: query
          description: OneID of the company that you want to retrieve mock data for. Must be one of [BMW, MB, BOSCH, ZF, TIER1, GRIES, BILSTEIN, ERROR_CP]
          required: true
          schema:
            $ref: "#/components/schemas/OneIDBusinessPartner"
        - name: fromDate
          in: query
          description: Starting date to include data in the query.
          required: true
          schema:
            $ref: "#/components/schemas/Date"
        - name: toDate
          in: query
          description: End date to include data in the query.
          required: true
          schema:
            $ref: "#/components/schemas/Date"
        - in: header
          name: x-api-key
          required: true
          description: API Key needed to access the API. Contact felix.gerbig@bmw.de.
          schema:
            type: string
      responses:
        '200':
          description: Mock Data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartMasterData'
        '400':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /generate-new-data:
    get:
      summary: Generate New Mock Data
      description: Generates New Mock Data
      operationId: generateData
      tags:
        - "Mock Data"
      parameters:
        - name: company
          in: query
          description: OneID of the company that you want to retrieve mock data for. Must be one of [BMW, MB, BOSCH, ZF, TIER1, GRIES, BILSTEIN, ERROR_CP]
          required: true
          schema:
            $ref: "#/components/schemas/PartMasterData"
        - in: header
          name: x-api-key
          required: true
          description: API Key needed to access the API. Contact felix.gerbig@bmw.de.
          schema:
            type: string
      responses:
        '200':
          description: New Mock Data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PartMasterData'
        '400':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    OneIDBusinessPartner:
      description: Business Partner OneID
      example: "Partner_00001_BOSCH"
      type: string
      minLength: 8
      maxLength: 20
      enum:
        - Partner_ERROR_CP
        - Partner_00001_BOSCH
        - Partner_00002_BILSTEIN
        - Partner_00003_GRIS
        - Partner_00004_ZF
        - Partner_00005_TIER1
        - Partner_00006_Mercedes
        - Partner_00007_BMW
        - Partner_00008_BASF

    PartMasterData:
      required:
        - staticData
      properties:
        staticData:
          $ref: "#/components/schemas/PartStaticData"
        uniqueData:
          $ref: "#/components/schemas/PartUniqueData"
        individualData:
          $ref: "#/components/schemas/PartIndividualData"

        supplyTree:
          $ref: "#/components/schemas/SupplyTreeParent"
        partTree:
          $ref: "#/components/schemas/PartTreeParent"
        qualityAlert:
          $ref: "#/components/schemas/QualityAlert"

    PartStaticData:
      required:
        - manufacturerOneId
        - manufactureContractOneId
        - partNameManufacturer
        - partNumberManufacturer
        - customerOneID
        - customerContractOneID
        - partNameCustomer
        - partNumberCustomer
      properties:
        manufacturerOneId:
          description: OneID of manufacture partner
          allOf:
            - $ref: "#/components/schemas/OneIDBusinessPartner"
        manufactureContractOneId:
          description: OneID of manufacture contract partner
          allOf:
            - $ref: "#/components/schemas/OneIDBusinessPartner"
        partNameManufacturer:
          type: string
          description: Name of the part family of manufacture
          example: KLEBER1
        partNumberManufacturer:
          type: string
          description: Number of part family of manufacture
          example: 101.15V
        customerOneID:
          description: OneID of customer plant
          allOf:
            - $ref: "#/components/schemas/OneIDBusinessPartner"
        customerContractOneID:
          description: OneID of customer contract partner
          allOf:
            - $ref: "#/components/schemas/OneIDBusinessPartner"
        partNameCustomer:
          type: string
          description: Name of the customer product
          example: MIRROR_1
        partNumberCustomer:
          type: string
          description: Type/Part No. of customer product
          example: "1122334455"

    PartUniqueData:
      required:
        - uniqueID
        - manufacturerUniqueID
        - customerUniqueID
      properties:
        uniqueID:
          type: string
          description: this is a local unique ID to identiy the part
          example:  1AB
        manufacturerUniqueID:
          type: string
          description: SerialNo. Of manufacture
          example: Xxx
        customerUniqueID:
          type: string
          description: SerialNo. Of customer
          example: "333"

    PartIndividualData:
      required:
        - productionCountryCode
        - productionDateGMT
      properties:
        productionCountryCode:
          type: string
          description: Country of production
          minLength: 3
          maxLength: 3
          example: "HUR"
        productionDateGMT:
          type: string
          description: Production Date without timestamp
          format: date

    QualityAlert:
      description: Quality Alert
      properties:
        QualityAlert:
          type: boolean
        QualityType:
          type: string
          enum:
            - CRITICAL
            - MAJOR
            - MINOR


    SupplyTreeParent:
      properties:
        isParentOf:
          type: array
          items:
            type: string
            example: 0000003_ZF
          description: pNM*, pNM

    PartTreeParent:
      properties:
        isParentOf:
          type: array
          items:
            type: string
            example: G05
          description: UID, UID


    Date:
      description: ISO Conform Date without time
      example: "2020-03-31"
      type: string
      minLength: 10
      maxLength: 10

    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        fields:
          type: string
