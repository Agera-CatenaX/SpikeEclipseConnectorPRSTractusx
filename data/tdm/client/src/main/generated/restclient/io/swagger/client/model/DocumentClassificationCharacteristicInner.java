/*
 * Catena-X Speedboat Test Data Generator
 * Disclaimer: This service serves synthetic, none-productive data for testing purposes only. All BOMs, part trees, VINs, serialNos etc. are synthetic
 *
 * OpenAPI spec version: 0.0.1 Speedboat
 * Contact: christian.kabelin@partner.bmw.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.List;
import java.util.Objects;

/**
 * DocumentClassificationCharacteristicInner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2021-10-13T14:06:31.566694+02:00[Europe/Zurich]")
public class DocumentClassificationCharacteristicInner {

  
  @JsonProperty("classId")
  private String classId = null;
  
  
  @JsonProperty("className")
  private String className = null;
  
  
  @JsonProperty("documentClassificationSystem")
  private String documentClassificationSystem = null;
  
  public DocumentClassificationCharacteristicInner classId(String classId) {
    this.classId = classId;
    return this;
  }

  
  /**
  * Get classId
  * @return classId
  **/
  
  
  @Schema(description = "")
  public String getClassId() {
    return classId;
  }
  public void setClassId(String classId) {
    this.classId = classId;
  }
  
  public DocumentClassificationCharacteristicInner className(String className) {
    this.className = className;
    return this;
  }

  
  /**
  * Get className
  * @return className
  **/
  
  
  @Schema(description = "")
  public String getClassName() {
    return className;
  }
  public void setClassName(String className) {
    this.className = className;
  }
  
  public DocumentClassificationCharacteristicInner documentClassificationSystem(String documentClassificationSystem) {
    this.documentClassificationSystem = documentClassificationSystem;
    return this;
  }

  
  /**
  * Get documentClassificationSystem
  * @return documentClassificationSystem
  **/
  
  
  @Schema(description = "")
  public String getDocumentClassificationSystem() {
    return documentClassificationSystem;
  }
  public void setDocumentClassificationSystem(String documentClassificationSystem) {
    this.documentClassificationSystem = documentClassificationSystem;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentClassificationCharacteristicInner documentClassificationCharacteristicInner = (DocumentClassificationCharacteristicInner) o;
    return Objects.equals(this.classId, documentClassificationCharacteristicInner.classId) &&
        Objects.equals(this.className, documentClassificationCharacteristicInner.className) &&
        Objects.equals(this.documentClassificationSystem, documentClassificationCharacteristicInner.documentClassificationSystem);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(classId, className, documentClassificationSystem);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentClassificationCharacteristicInner {\n");
    
    sb.append("    classId: ").append(toIndentedString(classId)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    documentClassificationSystem: ").append(toIndentedString(documentClassificationSystem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



