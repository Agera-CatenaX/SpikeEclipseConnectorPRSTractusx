# Build numbering format
name: $(BuildID)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'businesspartners/*'

resources:
- repo: self

variables:
  imageRepository: 'businesspartners'
  containerRegistry: 'catenaxdevacr.azurecr.io'
  tag: $(Build.BuildID)
  imagePullSecret: 'catenaxdevacr-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: './businesspartners/pom.xml'
        publishJUnitResults: false
        javaHomeOption: JDKVersion
        jdkVersionOption: '1.11'
        mavenVersionOption: Default
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: Docker@2
      inputs:
        containerRegistry: catenaxdevacr
        repository: businesspartners
        command: buildAndPush
        Dockerfile: './businesspartners/Dockerfile'
        tags: |
          $(tag)
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'TractusXPortal.businesspartners'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            inputs:
              action: createSecret
              kubernetesServiceConnection: catenax-dev-aks-services-businesspartners
              namespace: businesspartners
              secretType: dockerRegistry
              secretName:  $(imagePullSecret)
              dockerRegistryEndpoint: 'catenaxdevacr'

          - task: KubernetesManifest@0
            inputs:
              action: deploy
              kubernetesServiceConnection: catenax-dev-aks-services-businesspartners
              namespace: businesspartners
              manifests: |
                $(Pipeline.Workspace)/manifests/businesspartners.yaml
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'
              imagePullSecrets: |
                $(imagePullSecret)