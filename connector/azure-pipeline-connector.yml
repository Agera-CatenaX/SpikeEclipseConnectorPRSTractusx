# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- add-dsconnector-deployment

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3ea078d5-cddc-4e65-b0e7-f1b82c7339d0'
  imageRepository: 'dsconnector'
  containerRegistry: 'catenaxdevacr.azurecr.io'
  dockerfilePath: './connector/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'catenaxdevacr10283c4a-auth'

  # Kube vars
  azureSubscriptionEndpoint: '7db7b120-43c4-4cd8-b448-9b0957e1e289'
  azureResourceGroup: 'catenax-dev-rg'
  kubernetesCluster: 'catenax-dev-rg'
  kubeNamespace: 'centralconnector'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # connector vars
  KEYSTOREFILENAME: 'ms-dc-idsos-keystore'
  KEYSTOREPASSWORD: 'mspass'
  DB_SECRET_NAME: 'postgres-password'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sed -i -e "s%__KEYSTOREPASSWORD__%${KEYSTOREPASSWORD}%g" ./connector/src/main/resources/application.properties
        sed -i -e "s%__KEYSTOREFILENAME__%${KEYSTOREFILENAME}%g" ./connector/src/main/resources/application.properties
        sed -i -e "s%__KEYSTOREFILENAME__%${KEYSTOREFILENAME}%g" ./connector/src/main/resources/conf/config.json
        sed -i -e "s%__SED_SECRET_NAME__%${DB_SECRET_NAME}%g" ./connector/infrastructure/postgres/values.yaml
        sed -i -e "s%__IMAGE_TAG__%${tag}%g" ./connector/infrastructure/dataspaceconnector/values.yaml
        sed -i -e "s%__DOCKER_REGISTRY__%${containerRegistry}%g" ./connector/infrastructure/dataspaceconnector/values.yaml
      failOnStderr: true

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

#- stage: InstallHelm
#  displayName: Install Helm
#  jobs:
#  - job: InstallHelm
#    displayName: InstallHelm
#    pool:
#      vmImage: $(vmImageName)
#    steps:
#    - task: HelmInstaller@1
#      displayName: Helm installer
#      inputs: 
#        helmVersionToInstall: latest

- stage: Deploy_postgres
  displayName: Deploy postgres
  jobs:
  - job: Create_postgres_secret
    displayName: Create postgres secret
    steps:
    - task: Kubernetes@1
      displayName: Create postgres secret
      condition: eq(variables['DEPLOY_POSTGRES'], 'true')
      inputs:
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: catenax-dev-aks-services-connector
        command: apply
        secretType: generic
        secretArguments: --from-literal=db_user=connector --from-literal=db_pass=$DB_PASS
        secretName: postgres-password

  - job: Deploy_postgres
    displayName: Deploy postgres
    dependsOn: Create_postgres_secret
    condition: eq(variables['DEPLOY_POSTGRES'], 'true')
    steps:
    - task: HelmDeploy@0
      displayName: Helm upgrade
      inputs:
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: catenax-dev-aks-services-connector
        namespace: $(kubeNamespace)
        command: upgrade
        valueFile: ./connector/infrastructure/postgres/values.yaml
        chartType: filepath
        chartPath: ./connector/infrastructure/postgres
        releaseName: postgres
        install: true
        waitForExecution: false

- stage: Deploy_DSC
  displayName: Deploy DSC
  jobs:
  - job: Deploy_dataspaceconnector
    displayName: Deploy dataspaceconnector
    steps:
    - task: HelmDeploy@0
      displayName: Helm upgrade
      inputs:
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: catenax-dev-aks-services-connector
        namespace: $(kubeNamespace)
        command: upgrade
        valueFile: ./connector/infrastructure/dataspaceconnector/values.yaml
        chartType: filepath
        chartPath: ./connector/infrastructure/dataspaceconnector
        releaseName: postgres
        install: true
        waitForExecution: false