# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- add-dsconnector-deployment

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3ea078d5-cddc-4e65-b0e7-f1b82c7339d0'
  imageRepository: 'dsconnector'
  containerRegistry: 'catenaxdevacr.azurecr.io'
  dockerfilePath: './connector/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'catenaxdevacr10283c4a-auth'

  # Kube vars
  kubeNamespace: 'centralconnector'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # connector vars
  KEYSTOREFILENAME: 'catenaxdevakssrv.germanywestcentral.cloudapp.azure.com'
  KEYSTOREPASSWORD: 'password'
  configs: config


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build_1
    displayName: Build 1
    pool:
      vmImage: $(vmImageName)
#    variables:
#      imageRepository: 'dsconnector-1'
#      KEYSTOREFILENAME: 'dcs-keystore-1'
#      KEYSTOREPASSWORD: 'mspass'
#      configs: 'config-1'
    steps:
    - template: build-connector.yml
#  - job: Build_2
#    displayName: Build 2
#    pool:
#      vmImage: $(vmImageName)
#    variables:
#      imageRepository: 'dsconnector-2'
#      KEYSTOREFILENAME: 'dcs-keystore-2'
#      KEYSTOREPASSWORD: 'mspass'
#      configs: 'config-2'
#    steps:
#    - template: build-connector.yml
#  - job: Build_3
#    displayName: Build 3
#    pool:
#      vmImage: $(vmImageName)
#    variables:
#      imageRepository: 'dsconnector-3'
#      KEYSTOREFILENAME: 'dcs-keystore-3'
#      KEYSTOREPASSWORD: 'mspass'
#      configs: 'config-3'
#    steps:
#    - template: build-connector.yml

#- stage: InstallHelm
#  displayName: Install Helm
#  jobs:
#  - job: InstallHelm
#    displayName: InstallHelm
#    pool:
#      vmImage: $(vmImageName)
#    steps:
#    - task: HelmInstaller@1
#      displayName: Helm installer
#      inputs: 
#        helmVersionToInstall: latest

- stage: Deploy_postgres
  displayName: Deploy postgres
  jobs:
  - job: Create_postgres_secret
    displayName: Create postgres secret
    steps:
    - task: Kubernetes@1
      displayName: Create postgres secret
      #condition: eq(variables['DEPLOY_POSTGRES'], 'true')
      inputs:
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: catenax-dev-aks-services-connector
        namespace: $(kubeNamespace)
        secretType: generic
        secretArguments: --from-literal=db_user=connector --from-literal=db_pass=$DB_PASS
        secretName: postgres-password

  - job: Deploy_postgres_1
    displayName: Deploy postgres 1
    dependsOn: Create_postgres_secret
    #condition: eq(variables['DEPLOY_POSTGRES'], 'true')
    variables:
      releaseName: 'postgres-1'
      postgres-pv: 'postgres-pv-1'
      postgres-pvc: 'postgres-pvc-1'
    steps:
    - template: deploy-postgres.yml
  - job: Deploy_postgres_2
    displayName: Deploy postgres 2
    dependsOn: Create_postgres_secret
    #condition: eq(variables['DEPLOY_POSTGRES'], 'true')
    variables:
      releaseName: 'postgres-2'
      postgres-pv: 'postgres-pv-2'
      postgres-pvc: 'postgres-pvc-2'
    steps:
    - template: deploy-postgres.yml
  - job: Deploy_postgres_3
    displayName: Deploy postgres 3
    dependsOn: Create_postgres_secret
    #condition: eq(variables['DEPLOY_POSTGRES'], 'true')
    variables:
      releaseName: 'postgres-3'
      postgres-pv: 'postgres-pv-3'
      postgres-pvc: 'postgres-pvc-3'
    steps:
    - template: deploy-postgres.yml

- stage: Deploy_DSC
  displayName: Deploy DSC
  jobs:
  - job: Deploy_dataspaceconnector_1
    displayName: Deploy dataspaceconnector 1
    variables:
#      imageRepository: 'dsconnector-1'
      releaseName: 'dataspaceconnector-1'
#      configs: config-1
      ingressPath: '/kmuconnector(/|$)(.*)'
      dbHost: 'postgres-1'
    steps:
    - template: deploy-connector.yml
  - job: Deploy_dataspaceconnector_2
    displayName: Deploy dataspaceconnector 2
    variables:
#      imageRepository: 'dsconnector-2'
      releaseName: 'dataspaceconnector-2'
#      configs: config-2
      ingressPath: '/traceabilityconnector(/|$)(.*)'
      dbHost: 'postgres-2'
    steps:
    - template: deploy-connector.yml
  - job: Deploy_dataspaceconnector_3
    displayName: Deploy dataspaceconnector 3
    variables:
#      imageRepository: 'dsconnector-3'
      releaseName: 'dataspaceconnector-3'
#      configs: config-3
      ingressPath: '/partsmasterconnector(/|$)(.*)'
      dbHost: 'postgres-3'
    steps:
    - template: deploy-connector.yml